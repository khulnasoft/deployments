AWSTemplateFormatVersion: 2010-09-09
Description: >-
  This AWS CloudFormation template installs the Khulnasoft Command Center components
  in ECS FARGATE.
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: ECS Infrastructure Configuration
        Parameters:
          - ClusterName
          - VpcId
          - VpcCidr
          - EcsInstanceSubnets
          - LbSubnets
          - SSLCert   
      - Label:
          default: Khulnasoft Security Configuration
        Parameters:
          - KhulnasoftConsoleAccess
          - KhulnasoftServerImage
          - KhulnasoftGatewayImage
          - KhulnasoftEnvoyImage
      - Label:
          default: Khulnasoft Manage DB Configuration
        Parameters:
          - KhulnasoftDBInstanceEndPointURL
          - KhulnasoftDBUserName
          - KhulnasoftDBPassword
          - AuditRDS
          - AuditDBInstanceEndPointURL
          - AuditDBUserName  
          - AuditDBPassword        
    ParameterLabels:
      SSLCert:
        default: SSL cert ARN
      ClusterName:
        default: ECS cluster name
      VpcId:
        default: VPC ID
      VpcCidr:
        default: VPC CIDR
      EcsInstanceSubnets:
        default: ECS Instance Subnets
      LbSubnets:
        default: Khulnasoft LB Subnets
      KhulnasoftConsoleAccess:
        default: Web Console Source

Parameters:
  KhulnasoftServerImage:
    Type: String
    Description: Enter server image path on ECR
  KhulnasoftGatewayImage:
    Type: String
    Description: Enter gateway image path on ECR
  KhulnasoftEnvoyImage:
    Type: String
    Description: Enter envoy image path on ECR
  ClusterName:
    Description: Name of ecs cluster to be created
    Type: String
    MinLength: '5'
    MaxLength: '25'
    AllowedPattern: '[a-z0-9-]*'
  VpcId:
    Description: VpcId to deploy into
    Type: 'AWS::EC2::VPC::Id'
  VpcCidr:
    Description: 'For use by load balancer service polling. Enter VPC CIDR. Ex: 10.0.0.0/16'
    Type: String
  EcsInstanceSubnets:
    Type: 'List<AWS::EC2::Subnet::Id>'
    Description: Select all the subnets ECS utilizes
    ConstraintDescription: >-
      Password must be at least 9 characters long and have 3 out of the
      following: one number, one lower case, one upper case, or one special
      character.
  LbSubnets:
    Type: 'List<AWS::EC2::Subnet::Id>'
    Description: Select external ones if you need internet access.
  SSLCert:
    Description: ARN of the SSL cert to be used with console web UI LB
    Type: String    
  KhulnasoftConsoleAccess:
    Description: The IP address or range that may be used to access the Khulnasoft Console
    Type: String
    MinLength: '9'
    MaxLength: '18'
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x
  KhulnasoftDBInstanceEndPointURL:
    Description: Enter Endpoint URL of Khulnasoft DB
    Type: String
  KhulnasoftDBUserName:
    Description: Enter Khulnasoft DB User name
    Type: String
  KhulnasoftDBPassword:
    NoEcho: true
    Description: Enter Khulnasoft DB password
    Type: String
  AuditRDS:
    Description: Select Yes if you are having a seperate RDS endpoing for Audit
    Default: 'No'
    Type: String
    AllowedValues: ['Yes', 'No']
  AuditDBInstanceEndPointURL:
    Description: Enter Endpoint URL of Audit DB
    Type: String
  AuditDBUserName:
    Description: Enter Audit DB User name
    Type: String
  AuditDBPassword:
    NoEcho: true
    Description: Enter Audit DB password
    Type: String
Conditions:
  CreateAuditrds: !Equals [!Ref AuditRDS, 'Yes']
  ReplaceAuditrds: !Equals [!Ref AuditRDS, 'No']    
Resources:
  EcsCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Ref ClusterName
  KhulnasoftConsole:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    DependsOn:
      - KhulnasoftConsoleSecurityGroup
    Properties:
      Name: !Join
        - '-'
        - - !Ref EcsCluster
          - KhulnasoftConsole
      Scheme: internet-facing
      SecurityGroups:
        - !Ref KhulnasoftConsoleSecurityGroup
      Subnets: !Ref LbSubnets
      Type: application
  KhulnasoftConsoleTaskDefinition:
    Type: 'AWS::ECS::TaskDefinition'
    DependsOn:
      - KhulnasoftEcsTaskRole
      - KhulnasoftConsoleLogs
      - SecretU
      - SecretP
    Properties:
      Family: !Join
        - '-'
        - - !Ref EcsCluster
          - khulnasoft-console
      RequiresCompatibilities:
        - FARGATE
      Cpu: '4096'
      Memory: '8192'
      NetworkMode: awsvpc
      ExecutionRoleArn: !Ref KhulnasoftEcsTaskRole
      ContainerDefinitions:
        - Name: !Join
            - '-'
            - - !Ref EcsCluster
              - khulnasoft-console
          Image: !Ref KhulnasoftServerImage
          PortMappings:
            - ContainerPort: '8080'
              HostPort: '8080'
              Protocol: tcp
            - ContainerPort: '8443'
              HostPort: '8443'
              Protocol: tcp
          Essential: 'true'
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Join ['-', ['/khulnasoft/console', !Ref EcsCluster]]
              awslogs-region: !Ref "AWS::Region"
              awslogs-stream-prefix: khulnasoftConsole
          Secrets:
            - Name: SCALOCK_DBPASSWORD
              ValueFrom: !Ref SecretP
            - Name: SCALOCK_AUDIT_DBPASSWORD
              ValueFrom: !If [CreateAuditrds, !Ref SecretAuditP, !Ref SecretP]
            - Name: SCALOCK_DBUSER
              ValueFrom: !Ref SecretU
            - Name: SCALOCK_AUDIT_DBUSER
              ValueFrom: !If [CreateAuditrds, !Ref SecretAuditU, !Ref SecretU]                           
          Environment:
            - Name: KHULNASOFT_GRPC_MODE
              Value: 1
            - Name: KHULNASOFT_DOCKERLESS_SCANNING
              Value: 1
            - Name: SCALOCK_DBSSL
              Value: require
            - Name: SCALOCK_AUDIT_DBSSL
              Value: require
            - Name: SCALOCK_DBNAME
              Value: scalock
            - Name: BATCH_INSTALL_GATEWAY
              Value: !GetAtt
                - KhulnasoftNlb
                - DNSName
            - Name: SCALOCK_DBHOST
              Value: !Ref KhulnasoftDBInstanceEndPointURL
            - Name: SCALOCK_AUDIT_DBNAME
              Value: slk_audit
            - Name: SCALOCK_AUDIT_DBHOST
              Value: !If [CreateAuditrds, !Ref AuditDBInstanceEndPointURL, !Ref KhulnasoftDBInstanceEndPointURL]
      TaskRoleArn: !Ref KhulnasoftEcsTaskRole
  KhulnasoftConsoleService:
    Type: 'AWS::ECS::Service'
    DependsOn:
      - KhulnasoftConsoleTaskDefinition
      - KhulnasoftConsoleListener
      - KhulnasoftConsoleGrpcListener
    Properties:
      Cluster: !Ref EcsCluster
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !Ref KhulnasoftFargateSecurityGroup
          Subnets: !Ref EcsInstanceSubnets
      ServiceName: !Join
        - '-'
        - - !Ref EcsCluster
          - khulnasoft-console
      DesiredCount: '1'
      DeploymentConfiguration:
        MaximumPercent: '100'
        MinimumHealthyPercent: '0'
      LoadBalancers:
        - ContainerName: !Join
            - '-'
            - - !Ref EcsCluster
              - khulnasoft-console
          ContainerPort: '8080'
          TargetGroupArn: !Ref KhulnasoftConsoleTargetGroup
        - ContainerName: !Join
            - '-'
            - - !Ref EcsCluster
              - khulnasoft-console
          ContainerPort: '8443'
          TargetGroupArn: !Ref KhulnasoftConsoleGrpcTargetGroup
      TaskDefinition: !Ref KhulnasoftConsoleTaskDefinition
  KhulnasoftConsoleListener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    DependsOn:
      - KhulnasoftConsoleTargetGroup
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref KhulnasoftConsoleTargetGroup
      LoadBalancerArn: !Ref KhulnasoftConsole
      Port: '443'
      Protocol: HTTPS
      Certificates:
        - CertificateArn: !Ref SSLCert      
  KhulnasoftConsoleTargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    DependsOn:
      - KhulnasoftConsole
    Properties:
      TargetType: ip
      HealthCheckIntervalSeconds: 6
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      Matcher:
        HttpCode: '200'
      Name: !Join
        - '-'
        - - !Ref EcsCluster
          - khulnasoft-console
      Port: '8080'
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: '60'
      UnhealthyThresholdCount: 3
      VpcId: !Ref VpcId
  KhulnasoftEnvoyListener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    DependsOn:
      - KhulnasoftEnvoyTargetGroup
      - KhulnasoftNlb
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref KhulnasoftEnvoyTargetGroup
      LoadBalancerArn: !Ref KhulnasoftNlb
      Port: '443'
      Protocol: TCP
  KhulnasoftConsoleGrpcListener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    DependsOn:
      - KhulnasoftConsoleGrpcTargetGroup
      - KhulnasoftNlb
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref KhulnasoftConsoleGrpcTargetGroup
      LoadBalancerArn: !Ref KhulnasoftNlb
      Port: '8443'
      Protocol: TCP
  KhulnasoftEnvoyTargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    DependsOn:
      - KhulnasoftNlb
    Properties:
      TargetType: ip
      HealthCheckIntervalSeconds: 30
      HealthCheckProtocol: TCP
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      HealthCheckPort: 8443
      Name: !Join
        - '-'
        - - !Ref EcsCluster
          - khulnasoft-envoy
      Port: '443'
      Protocol: TCP
      VpcId: !Ref VpcId
  KhulnasoftConsoleGrpcTargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    DependsOn:
      - KhulnasoftConsole
    Properties:
      TargetType: ip
      HealthCheckIntervalSeconds: 30
      HealthCheckProtocol: TCP
      HealthyThresholdCount: 2
      HealthCheckPort: 8443
      Name: !Join
        - '-'
        - - !Ref EcsCluster
          - khulnasoft-grpc
      Port: '8443'
      Protocol: TCP
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: '60'
      UnhealthyThresholdCount: 2
      VpcId: !Ref VpcId
  KhulnasoftEnvoyTaskDefinition:
    Type: 'AWS::ECS::TaskDefinition'
    DependsOn:
      - KhulnasoftEcsTaskRole
      - KhulnasoftEnvoyLogs
    Properties:
      Family: !Join
        - '-'
        - - !Ref EcsCluster
          - khulnasoft-envoy
      NetworkMode: awsvpc
      ExecutionRoleArn: !Ref KhulnasoftEcsTaskRole
      RequiresCompatibilities:
        - FARGATE
      Cpu: '4096'
      Memory: '8192'
      TaskRoleArn: !Ref KhulnasoftEcsTaskRole
      ContainerDefinitions:
        - Name: !Join
            - '-'
            - - !Ref EcsCluster
              - khulnasoft-envoy
          Image: !Ref KhulnasoftEnvoyImage
          PortMappings:
            - ContainerPort: '8443'
              HostPort: '8443'
              Protocol: tcp
          Essential: 'true'
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Join ['-', ['/khulnasoft/envoy', !Ref EcsCluster]]
              awslogs-region: !Ref "AWS::Region"
              awslogs-stream-prefix: khulnasoftEnvoy
          Environment:
            - Name: GATEWAY_ADDRESS
              Value: !Join
                - '-'
                - - !Ref EcsCluster
                  - khulnasoft-gateway.ecs.khulnasoft.ext
  KhulnasoftGatewayTaskDefinition:
    Type: 'AWS::ECS::TaskDefinition'
    DependsOn:
      - KhulnasoftEcsTaskRole
      - KhulnasoftGatewayLogs
      - SecretU
      - SecretP
    Properties:
      Family: !Join
        - '-'
        - - !Ref EcsCluster
          - khulnasoft-gateway
      NetworkMode: awsvpc
      ExecutionRoleArn: !Ref KhulnasoftEcsTaskRole
      RequiresCompatibilities:
        - FARGATE
      Cpu: '4096'
      Memory: '8192'
      TaskRoleArn: !Ref KhulnasoftEcsTaskRole
      ContainerDefinitions:
        - Name: !Join
            - '-'
            - - !Ref EcsCluster
              - khulnasoft-gateway
          Image: !Ref KhulnasoftGatewayImage
          PortMappings:
            - ContainerPort: '8443'
              HostPort: '8443'
              Protocol: tcp
            - ContainerPort: '8089'
              HostPort: '8089'
              Protocol: tcp
          Essential: 'true'
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Join ['-', ['/khulnasoft/gateway', !Ref EcsCluster]]
              awslogs-region: !Ref "AWS::Region"
              awslogs-stream-prefix: khulnasoftGateway
          Secrets:
            - Name: SCALOCK_DBPASSWORD
              ValueFrom: !Ref SecretP
            - Name: SCALOCK_AUDIT_DBPASSWORD
              ValueFrom: !If [CreateAuditrds, !Ref SecretAuditP, !Ref SecretP]
            - Name: SCALOCK_DBUSER
              ValueFrom: !Ref SecretU
            - Name: SCALOCK_AUDIT_DBUSER
              ValueFrom: !If [CreateAuditrds, !Ref SecretAuditU, !Ref SecretU]                           
          Environment:
            - Name: SCALOCK_DBSSL
              Value: require
            - Name: SCALOCK_AUDIT_DBSSL
              Value: require
            - Name: HEALTH_MONITOR
              Value: '0.0.0.0:8089'
            - Name: SCALOCK_DBNAME
              Value: scalock
            - Name: SCALOCK_DBHOST
              Value: !Ref KhulnasoftDBInstanceEndPointURL
            - Name: SCALOCK_AUDIT_DBNAME
              Value: slk_audit
            - Name: SCALOCK_AUDIT_DBHOST
              Value: !If [CreateAuditrds, !Ref AuditDBInstanceEndPointURL, !Ref KhulnasoftDBInstanceEndPointURL]
            - Name: KHULNASOFT_CONSOLE_SECURE_ADDRESS
              Value: !Join
                - ''
                - - !GetAtt
                    - KhulnasoftNlb
                    - DNSName
                  - ':8443'
  PrivateNamespace:
    Type: AWS::ServiceDiscovery::PrivateDnsNamespace
    Properties:
      Name: ecs.khulnasoft.ext
      Vpc: !Ref VpcId
  DiscoveryService:
    DependsOn:
      - PrivateNamespace
    Type: AWS::ServiceDiscovery::Service
    Properties:
      Description: Discovery Service for the Demo Application
      DnsConfig:
        RoutingPolicy: MULTIVALUE
        DnsRecords:
          - TTL: 60
            Type: A
          - TTL: 60
            Type: SRV
      HealthCheckCustomConfig:
        FailureThreshold: 1
      Name: !Join
        - '-'
        - - !Ref EcsCluster
          - khulnasoft-gateway
      NamespaceId: !Ref PrivateNamespace
  KhulnasoftGatewayService:
    Type: 'AWS::ECS::Service'
    DependsOn:
      - KhulnasoftGatewayTaskDefinition
    Properties:
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !Ref KhulnasoftFargateSecurityGroup
          Subnets: !Ref EcsInstanceSubnets
      Cluster: !Ref EcsCluster
      ServiceName: !Join
        - '-'
        - - !Ref EcsCluster
          - khulnasoft-gateway
      DesiredCount: '2'
      DeploymentConfiguration:
        MaximumPercent: '200'
        MinimumHealthyPercent: '100'
      TaskDefinition: !Ref KhulnasoftGatewayTaskDefinition
      ServiceRegistries:
        - RegistryArn: !GetAtt DiscoveryService.Arn
          Port: 8443
  KhulnasoftEnvoyService:
    Type: 'AWS::ECS::Service'
    DependsOn:
      - KhulnasoftEnvoyTaskDefinition
      - KhulnasoftNlb
      - KhulnasoftEnvoyTargetGroup
      - KhulnasoftEnvoyListener
    Properties:
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !Ref KhulnasoftFargateSecurityGroup
          Subnets: !Ref EcsInstanceSubnets
      Cluster: !Ref EcsCluster
      ServiceName: !Join
        - '-'
        - - !Ref EcsCluster
          - khulnasoft-envoy
      DesiredCount: '2'
      DeploymentConfiguration:
        MaximumPercent: '200'
        MinimumHealthyPercent: '100'
      LoadBalancers:
        - ContainerName: !Join
            - '-'
            - - !Ref EcsCluster
              - khulnasoft-envoy
          ContainerPort: '8443'
          TargetGroupArn: !Ref KhulnasoftEnvoyTargetGroup
      TaskDefinition: !Ref KhulnasoftEnvoyTaskDefinition
  KhulnasoftConsoleSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Allow access to Khulnasoft Console Instances
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '8080'
          ToPort: '8080'
          CidrIp: !Ref KhulnasoftConsoleAccess
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: !Ref KhulnasoftConsoleAccess
        - IpProtocol: tcp
          FromPort: '8443'
          ToPort: '8443'
          CidrIp: !Ref KhulnasoftConsoleAccess
  KhulnasoftFargateSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    DependsOn:
      - KhulnasoftConsoleSecurityGroup
    Properties:
      GroupDescription: Allow lb access to fargate tasks
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '8443'
          ToPort: '8443'
          CidrIp: !Ref VpcCidr
        - IpProtocol: tcp
          FromPort: '8089'
          ToPort: '8089'
          CidrIp: !Ref VpcCidr
        - IpProtocol: tcp
          FromPort: '8443'
          ToPort: '8443'
          CidrIp: !Ref VpcCidr
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: !Ref VpcCidr          
        - IpProtocol: tcp
          FromPort: '8080'
          ToPort: '8080'
          SourceSecurityGroupId: !Ref KhulnasoftConsoleSecurityGroup
  KhulnasoftEcsTaskRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Join
        - '-'
        - - !Ref EcsCluster
          - KhulnasoftEcsTaskRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: !Join
            - '-'
            - - !Ref EcsCluster
              - KhulnasoftScannerPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'ecr:GetDownloadUrlForLayer'
                  - 'ecr:BatchGetImage'
                  - 'ecr:DescribeImages'
                  - 'ecr:GetAuthorizationToken'
                  - 'ecr:DescribeRepositories'
                  - 'ecr:ListImages'
                  - 'ecr:BatchCheckLayerAvailability'
                  - 'ecr:GetRepositoryPolicy'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: '*'
              - !Ref 'AWS::NoValue'
        - PolicyName: !Join
            - '-'
            - - !Ref EcsCluster
              - KhulnaSoftretsManagerPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'secretsmanager:GetSecretValue'
                Resource:
                  - !Ref SecretP
                  - !Ref SecretU
                  - !If [ CreateAuditrds, !Ref SecretAuditP, Ref: AWS::NoValue ]
                  - !If [ CreateAuditrds, !Ref SecretAuditU, Ref: AWS::NoValue ]
        - PolicyName: !Join
            - '-'
            - - !Ref EcsCluster
              - KMSPermisions
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'kms:Decrypt'
                  - 'kms:Encrypt'
                Resource: '*'                  
  KhulnasoftConsoleLogs:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Join ['-', ['/khulnasoft/console', !Ref EcsCluster]]
      RetentionInDays: 30
  KhulnasoftGatewayLogs:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Join ['-', ['/khulnasoft/gateway', !Ref EcsCluster]]
      RetentionInDays: 30
  KhulnasoftEnvoyLogs:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Join ['-', ['/khulnasoft/envoy', !Ref EcsCluster]]
      RetentionInDays: 30
  KhulnasoftNlb:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      Name: !Join
        - '-'
        - - !Ref EcsCluster
          - khulnasoft-nlb
      Scheme: internet-facing
      Subnets: !Ref LbSubnets
      Type: network
      LoadBalancerAttributes:
        - Key: load_balancing.cross_zone.enabled
          Value: true
  SecretU:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Khulnasoft RDS Username
      Name: "KhulnasoftRdsUsername"
      SecretString: !Ref KhulnasoftDBUserName
  SecretP:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Khulnasoft RDS Password
      Name: "KhulnasoftRdsPassword"
      SecretString: !Ref KhulnasoftDBPassword
  SecretAuditU:
    Condition: CreateAuditrds
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Audit RDS Username
      Name: "AuditRdsUsername"
      SecretString: !Ref AuditDBUserName
  SecretAuditP:
    Condition: CreateAuditrds
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Audit RDS Password
      Name: "AuditRdsPassword"
      SecretString: !Ref AuditDBPassword
Outputs:
  KhulnasoftConsole:
    Description: URL to access Khulnasoft Security Console HTTPS
    Value: !Join
      - ''
      - - 'https://'
        - !GetAtt
          - KhulnasoftConsole
          - DNSName
        - ':443'        
  KhulnasoftConsoleGrpcConnection:
    Description: >-
      DNS to server gRPC
    Value: !Join
      - ''
      - - !GetAtt
          - KhulnasoftNlb
          - DNSName
        - ':8443'
  KhulnasoftEnvoyExternalConnection:
    Description: >-
      Khulnasoft Enforcer gateway startup connection string for use when Enforcers are
      external to VPC.
    Value: !Join
      - ''
      - - !GetAtt
          - KhulnasoftNlb
          - DNSName
        - ':443'
  KhulnasoftEcsTaskRole:
    Description: IAM role assigned to access ECR
    Value: !Ref KhulnasoftEcsTaskRole
  KhulnasoftDBInstanceIdentifier:
    Description : Khulnasoft DB Instance Identifier
    Value : !Ref KhulnasoftDBInstanceEndPointURL
    Export :
      Name : 
        'Fn::Sub': '${AWS::StackName}-Khulnasoft60DBInstanceID'
  KhulnasoftAuditDBInstanceIdentifier:
    Condition: CreateAuditrds
    Description : Khulnasoft audit DB Instance Identifier
    Value : !Ref AuditDBInstanceEndPointURL
    Export :
      Name : 
        'Fn::Sub': '${AWS::StackName}-Khulnasoft60AuditDBInstanceID'