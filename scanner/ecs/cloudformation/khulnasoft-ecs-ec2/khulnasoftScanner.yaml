AWSTemplateFormatVersion: 2010-09-09
Description: >-
    This Cloudformation Template Installs Khulnasoft Enforcer on ECS Cluster with EC2 compatibilities.
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: Khulnasoft Component Configurations
        Parameters:
          - KhulnasoftServerAddress
          - KhulnasoftScannerUserName
          - KhulnasoftScannerPassword
          - KhulnasoftScannerImage
          - ECSClusterName
          #- SSLCert
    ParameterLabels:
        KhulnasoftGatewayAddress:
            default: Existing Khulnasoft Server DNS/IP
        KhulnasoftScannerUserName:
            default: Khulnasoft Scanner User Name
        KhulnasoftScannerPassword:
            default: Khulnasoft Scanner Password
        KhulnasoftScannerImage:
            default: Khulnasoft Scanner Image
        ECSClusterName:
            default: ECS Cluster Name 
Parameters:
    KhulnasoftServerAddress:
        Type: String
        Description: The Khulnasoft Server DNS/IP.
    KhulnasoftScannerUserName:
        Description: Khulnasoft User Name to authenticate scanner with Khulnasoft server.
        Type: String
    KhulnasoftScannerPassword:
        Description: Khulnasoft Password to authenticate scanner with Khulnasoft server.
        Type: String
    KhulnasoftScannerImage:
        Type: String
        Description: Enter Scanner image URI from ECR
    ECSClusterName:
        Type: String
        Description: Enter the existing ECS Cluster name.
Resources:
  KhulnasoftScannerTaskDefinition:
      Type: 'AWS::ECS::TaskDefinition'
      DependsOn:
        - KhulnasoftEcsTaskRole
        - KhulnasoftScannerLogs
      Properties:
        Family: !Join 
          - '-'
          - - !Ref ECSClusterName
            - khulnasoft-scanner
        RequiresCompatibilities:
          - EC2
        Volumes:
          - Host:
              SourcePath: /var/run/docker.sock
            Name: docker-socket
        ContainerDefinitions:
          - Name: !Join ['-', [!Ref ECSClusterName, 'khulnasoft-scanner']]
            Image: !Ref KhulnasoftScannerImage
            EntryPoint: 
              -  "/bin/sh"
            Command: 
              -  "-c" 
              -  "/opt/khulnasoft/scannercli daemon --host ${KHULNASOFT_SERVER} --user ${KHULNASOFT_SCANNER_USERNAME} --password ${KHULNASOFT_SCANNER_PASSWORD} --no-verify"
            Cpu: '1024'
            Memory: '2048'
            MountPoints:
              - ContainerPath: /var/run/docker.sock
                SourceVolume: docker-socket
            LogConfiguration:
              LogDriver: awslogs
              Options:
                awslogs-group: !Join ['-', ['/khulnasoft/scanner', !Ref ECSClusterName]]
                awslogs-region: !Ref "AWS::Region"
                awslogs-stream-prefix: khulnasoftScanner
            Essential: 'true'
            Environment:
              - Name: KHULNASOFT_SERVER
                Value: !Ref KhulnasoftServerAddress
              - Name: KHULNASOFT_SCANNER_USERNAME
                Value: !Ref KhulnasoftScannerUserName
              - Name: KHULNASOFT_SCANNER_PASSWORD
                Value: !Ref KhulnasoftScannerPassword
              - Name: KHULNASOFT_LOGICAL_NAME
                Value: !Join 
                  - '-'
                  - - ECS
                    - !Ref ECSClusterName
        NetworkMode: bridge
        TaskRoleArn: !Ref KhulnasoftEcsTaskRole
        ExecutionRoleArn: !Ref KhulnasoftEcsTaskRole
  KhulnasoftScannerService:
      Type: 'AWS::ECS::Service'
      DependsOn:
        - KhulnasoftScannerTaskDefinition
      Properties:
        Cluster: !Ref ECSClusterName
        ServiceName: !Join 
          - '-'
          - - !Ref ECSClusterName
            - khulnasoft-scanner
        DesiredCount: 1
        PlacementStrategies:
          - Type: spread
            Field: 'attribute:ecs.availability-zone'
          - Type: spread
            Field: instanceId
        DeploymentConfiguration:
          MaximumPercent: '200'
          MinimumHealthyPercent: '100'
        TaskDefinition: !Ref KhulnasoftScannerTaskDefinition
  KhulnasoftEcsTaskRole:
      Type: 'AWS::IAM::Role'
      Properties:
        RoleName: !Join 
          - '-'
          - - !Ref ECSClusterName
            - KhulnasoftEcsTaskRole
        AssumeRolePolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - ecs-tasks.amazonaws.com
              Action:
                - 'sts:AssumeRole'
        Path: /
        Policies:
          - PolicyName: !Join 
              - '-'
              - - !Ref ECSClusterName
                - KhulnasoftScannerPolicy
            PolicyDocument:
              Version: 2012-10-17
              Statement:
                - Effect: Allow
                  Action:
                    - 'ecr:GetDownloadUrlForLayer'
                    - 'ecr:BatchGetImage'
                    - 'ecr:DescribeImages'
                    - 'ecr:GetAuthorizationToken'
                    - 'ecr:DescribeRepositories'
                    - 'ecr:ListImages'
                    - 'ecr:BatchCheckLayerAvailability'
                    - 'ecr:GetRepositoryPolicy'
                    - 'logs:CreateLogStream'
                    - 'logs:PutLogEvents'
                    - 'logs:CreateLogGroup'
                    - 'logs:PutLogEvents'
                    - 'logs:CreateLogDelivery'
                    - 'logs:CreateLogStream'
                    - 'logs:TagLogGroup'
                  Resource: '*'
                - !Ref 'AWS::NoValue'
  KhulnasoftScannerLogs:
      Type: 'AWS::Logs::LogGroup'
      Properties:
        LogGroupName: !Join ['-', ['/khulnasoft/scanner', !Ref ECSClusterName]]
        RetentionInDays: 30
